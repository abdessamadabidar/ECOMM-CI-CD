spring:
  graphql:
    graphiql:
      enabled: true
    cors:
      allowed-origins: ${CLIENT_HOST}
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    websocket:
      path: /graphql
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true

  datasource:
    url: jdbc:postgresql://host.docker.internal:${POSTGRES_PORT}/${POSTGRES_DB_NAME}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}

  application:
    name: ${APP_NAME}
  sql:
    init:
      mode: never

server:
  port: ${PROD_SERVER_PORT}

app:
  data:
    number-of-customers: ${NUMBER_OF_CUSTOMERS}
    number-of-products: ${NUMBER_OF_PRODUCTS}
    number-of-orders: ${NUMBER_OF_ORDERS}

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: [ "prometheus" ]

